type Author {
  id: String
  name: String
  biography: String
  bornDate: String
  books: [Book]
  totalBooks: Int
  createdAt: String
  updatedAt: String
}

type Book {
  id: String
  title: String
  description: String
  publishedDate: String
  authorId: String
  author: Author
  rating: Float
  createdAt: String
  updatedAt: String
}

type Review {
  id: String
  bookId: String
  comment: String
  rating: Int
  createdAt: String
  updatedAt: String
}

type Query {
  authors(page: Int, pageSize: Int, id: String, name: String): [Author!]
  books(page: Int, pageSize: Int, id: String, authorId: String, title: String): [Book!]
  reviews(page: Int, pageSize: Int, bookId: String!): [Review!]
  totalBooks(authorId: String): Int
  totalAuthors: Int
  totalReviews(bookId: String!): Int
}

type Mutation {
  addAuthor(name: String!, biography: String, bornDate: String): Author!
  addBook(title: String!, description: String, publishedDate: String, authorId: String): Book!
  addReview(bookId: String!, comment: String, rating: Int): Review!
  updateAuthor(id: String!, name: String, biography: String, bornDate: String): Author!
  updateBook(id: String!, title: String, description: String, publishedDate: String, authorId: String): Book!
  updateReview(id: String!, comment: String, rating: Int): Review!
  deleteAuthor(id: String!): Author!
  deleteBook(id: String!): Book!
  deleteReview(id: String!): Review!
}
